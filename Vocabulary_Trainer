from random import *
import csv


version = "0.100"
vocabulary_file = 'vokabeln.csv'
    
#csv file reader
def readMyFile(filename):
    lang1 = []
    lang2 = []
    with open(filename) as csvDataFile:
        csvReader = csv.reader(csvDataFile)
        for row in csvReader:
            lang1.append(row[0])
            lang2.append(row[1])
    return lang1, lang2
lang1,lang2 = readMyFile(vocabulary_file)

#shows original csv data
def print_original_csv():
    print("#original 2-columns file")
    for i in range(len(lang1)):
        print(lang1[i], lang2[i])    

##new (modified) dict()
def print_new_dict():
    print("#new (modified) dictionary")
    for i in range(len(field)):
        print('%-3i%-12s%-12s' %
              (i+1,
               field[i][0],
               field[i][1]))



##new (modified) dict() with /p function
def nn_number_words(number_words):
    length = len(field)
    teile = length // number_words
    rest = length % number_words
    for i in range(teile):
        pp(i*number_words,i*number_words+number_words)
        dir_p = input("Press Enter . . . ")
        print(" ")
    for i in range(length-len(field)%number_words, length):
        print('%-3i%-12s%-12s' %
              (i+1,
               field[i][0],
               field[i][1]))
         

##def print_k_words():
def pp(j,k):
    for i in range(j,k):
        print('%-3i%-12s%-12s' %
              (i+1,
               field[i][0],
               field[i][1]))


        
#takes csv and returns fields, with words and slots for statistics
field = {}
##field[0] = ["en","de","stats1"]
def fields():
    global field
    for i in range(len(lang1)):
        #[de,en,right,wrong,total]
        field[i] = [0,0,0,0]
        field[i][0] = lang1[i]
        field[i][1] = lang2[i]
fields()

def changerz():
    z = len(field)
    show_all()
    print(" ")
    eingabe = input("enter word to change (1-"+str(z)+"): ")
    print(" ")
    eingabe_de_en = input("Change german (1) or english (2) word :")
    if int(eingabe_de_en) == 1:
       print("old word is", field[int(eingabe)-1][0])
       eingabe_word_new = input("enter new word: ")
       field[int(eingabe)-1][0] = eingabe_word_new
       print("updated")
       return eingabe_word_new
    if int(eingabe_de_en) == 2:
       print(field[int(eingabe)-1][1])
       eingabe_word_new = input("enter new word: ")
       field[int(eingabe)-1][1] = eingabe_word_new
       print("updated")
       return eingabe_word_new
    else:
       print("Input not valid. Try again.")


def changerz_by_word():
    z = len(field)
    show_all()
    print(" ")
    eingabe = input("enter word to change: ")
    for i in range(len(field)):
        if eingabe in field[i]:
            print(i+1, field[i])
            print(" ")
            eingabe_de_en = input("Change german (1) or english (2) word :")
            if int(eingabe_de_en) == 1:
               print("old word is", field[i][0])
               eingabe_word_new = input("enter new word: ")
               field[i][0] = eingabe_word_new
               print("updated")
               return eingabe_word_new
            if int(eingabe_de_en) == 2:
               print(field[i][1])
               eingabe_word_new = input("enter new word: ")
               field[i][1] = eingabe_word_new
               print("updated")
               return eingabe_word_new
            else:
               print("Input not valid. Try again.")            


       
def csv_exporter():
   file_namer = input("enter name for csv-file: ")
   with open(file_namer+'.csv', 'w') as csv_file:
    writer = csv.writer(csv_file)
    for key, value in field.items():
       writer.writerow([key, value[0], value[1], value[2], value[3]])
    print('"'+file_namer+'.csv'+'"'+" exported")


def check_true_false():
    eingabe = input("enter searchword: ")
    for i in range(len(field)):
##        print(i)
        if eingabe in field[i]:
            print("tada", field[i])
    print(" nope ")
    
#adds new word    
def word_adder():
    z = len(field)
    field[z] = [0,0,0,0]
    eingabe_lang1 = input("enter new word (german): ")
    eingabe_lang2 = input("enter new word (english): ")
    field[z][0] = eingabe_lang1
    field[z][1] = eingabe_lang2
    print("New words added")
    print(" ")
    word_adder_new()

#menu 'add word'
def word_adder_new():
    eingabe_lang3 = input("Add new word? [Y/N]")
    if eingabe_lang3 == "n":
        return
    if eingabe_lang3 == "y":
        return word_adder()
    else:
       wrong_input()
       word_adder_new()
       
def info():
    print("With this vocabulary trainer you can train ")
    print("your choice of specific words as often as you")
    print("like. You can also choose which direction you ")
    print("want to be tested and how many words randomly")
    print("should show up.")
    print(" ")
    back_main()

#menu command - show all words in dictionary
def show_all():
    print_original_csv()
    print(" ")
    print_new_dict()

def show_stats():
    print('%-3s%-12s%-12s%-8s%-8s%-8s' %("#", "German", "English", "Right", "Wrong", "Total"))
    print(51*"-")
##    print("German", "English", "Right", "Wrong", "Total")
    for i in range(len(field)):
        print('%-3i%-12s%-12s%-8i%-8i%-8i' %
              (i+1,
               field[i][0],
               field[i][1],
               field[i][2],
               field[i][3],
               field[i][2]+field[i][3]))

#wrong input error
def wrong_input():
    print(" ")
    print("Wrong input. Try again")
    print(" ")

def back_main():
    enter_menu = input("Press [Enter] to go back ")
    if enter_menu == "":
        print(" ")
        commando()
    else:
        wrong_input()
        back_main()
        
#menu design
def menu():
    print(" ")
    print("command                   key")
    print("-----------------------------")
    print("info                        i")
    print("show complete dictionary    d")
    print("show dictionary /p          p")   
    print("update words                u")
    print("update words II             cc")
    print("add words                   a")
    print("show statistics             s")
    print("export csv file             x")
    print("Back to main menu           m")
    print(" ")
    enter_menu = input("enter  key: ")
    print(" ")
    return enter_menu

#menu commands
def commando():
    enter_cmd = menu()
    if enter_cmd == "i":
        return info()    
    if enter_cmd == "m":
        return start_screen()
    if enter_cmd=="d":
         show_all()
         print(" ")
         return back_main()
    if enter_cmd=="p":
         nn_number_words(40)
         print(" ")
         return back_main()
    if enter_cmd=="s":
         show_stats()
         print(" ")
         return back_main()
    if enter_cmd=="u":
         changerz()
         print(" ")
         return back_main()
    if enter_cmd=="x":
         csv_exporter()
         print(" ")
         return back_main()
    if enter_cmd=="a":
        word_adder()
        return commando()
    if enter_cmd == "cc":
        changerz_by_word()
        print(" ")
        return back_main()
    else:
        wrong_input()
        commando()

#start screen options
def start_screen():
    print(" ")
    print(" ------------------------------------------------")
    print(" Vocabulary Trainer Version "+version)
    print(" ------------------------------------------------")
    print(" ")
    eingabe = input("Press [Enter] to start or type 'c' for commands:")
    if eingabe == "":
        print(" ")
        return trainer()
    if eingabe == "c":
        commando()
    else:
        wrong_input()
        start_screen()

#takes a random number from range of length of vocabulary_file
def lang1_lang2_rand_picker():
    length_dict =len(lang1)
    rand_no = randint(0, length_dict-1)
    return rand_no

#how many vocabularies to check
def how_many_words():
    while True:
      try:
         enter_val  = int(input("How many words to check?: "))       
      except ValueError:
         wrong_input()
         continue
      else:
         return enter_val 

#chose language direction and do quesitonaire + show results
def direction_language(x,y):
    j = 0
    k = 0
    for i in range(how_many_words()):
        print(" ")
        rand_no = lang1_lang2_rand_picker()
        input_lang = input(field[rand_no][x]+" : ")
        if input_lang == field[rand_no][y]:
            j += 1
            field[rand_no][2] += 1
            print("Correct!")
            print(" ")
        else:
            k += 1
            field[rand_no][3] += 1
            print("Wrong. The Correct answer is: ", field[rand_no][y])
            print(" ")
    print(" ")
    print(6*"-","Result", 6*"-")
    print("Correct:",j, "Wrong:", k)
    print(20*"-")
    return show_stats()
    
#train words, count right or wrong
def trainer():
    eingabe_lang_dir = input("Ger-En (1) or En-Ger (2): ")
    if eingabe_lang_dir == "1":
        return direction_language(0,1)
    if eingabe_lang_dir == "2":
        return direction_language(1,0)
    else:
        wrong_input()
        return trainer()

  
start_screen()
